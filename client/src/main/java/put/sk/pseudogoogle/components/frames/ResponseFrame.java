package put.sk.pseudogoogle.components.frames;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import put.sk.pseudogoogle.data.Response;
import put.sk.pseudogoogle.logic.communication.Communicator;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;

public class ResponseFrame extends JFrame {
  private final Communicator communicator;
  private final Runnable onCancelListener;
  private JPanel contentPane;
  private JList<String> urlList;

  public ResponseFrame(Communicator communicator, Runnable onCancelListener) {
    this.communicator = communicator;
    this.onCancelListener = onCancelListener;

    setContentPane(contentPane);
    setResizable(false);

    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    addWindowListener(
        new WindowAdapter() {
          public void windowClosing(WindowEvent e) {
            onCancel();
          }
        });

    contentPane.registerKeyboardAction(
        e -> onCancel(),
        KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
        JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  }

  @Override
  public void setVisible(boolean b) {
    if (b) {
      setupUrlList();
    }
    super.setVisible(b);
  }

  private void setupUrlList() {
    DefaultListModel<String> listModel = new DefaultListModel<>();
    Response response = communicator.getResponse();

    if (response.getType() == Response.Type.NOT_FOUND) {
      listModel.addElement("No urls found");
    } else {
      for (String url : response.getUrls()) {
        listModel.addElement(url);
      }
    }
    urlList.setModel(listModel);
    urlList.revalidate();
    urlList.repaint();
    pack();
    setLocationRelativeTo(null);
  }

  private void onCancel() {
    SwingUtilities.invokeLater(onCancelListener);
  }

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    contentPane = new JPanel();
    contentPane.setLayout(new GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
    contentPane.setBorder(
        BorderFactory.createTitledBorder(
            null,
            "Response",
            TitledBorder.DEFAULT_JUSTIFICATION,
            TitledBorder.DEFAULT_POSITION,
            null,
            null));
    final JScrollPane scrollPane1 = new JScrollPane();
    contentPane.add(
        scrollPane1,
        new GridConstraints(
            0,
            0,
            1,
            1,
            GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW,
            null,
            null,
            null,
            0,
            false));
    urlList = new JList();
    scrollPane1.setViewportView(urlList);
  }

  /** @noinspection ALL */
  public JComponent $$$getRootComponent$$$() {
    return contentPane;
  }
}
